<?xml version="1.0" encoding="UTF-8"?>
<project name="deicerframework" basedir="." default="build">

    <!-- ============================================  -->
    <!-- Directories used by dependent targets         -->
    <!-- ============================================  -->
    <property name="source-dir"                 value="${project.basedir}/src"/>
    <property name="tests-dir"                  value="${project.basedir}/tests"/>
    <property name="build-dir"                  value="${project.basedir}/build"/>
    <property name="doc-dir"                    value="${build-dir}/doc"/>
    <property name="standards-report-dir"       value="${build-dir}/standards-report"/>
    <property name="phplint-report-dir"         value="${build-dir}/phplint-report"/>
    <property name="test-log-dir"               value="${build-dir}/test-log"/>
    <property name="test-report-dir"            value="${build-dir}/test-report"/>
    <property name="coverage-report-dir"        value="${build-dir}/coverage-report"/>
    <property name="coverage-report-styles-dir" value="/usr/share/php/data/phing/etc"/>

    <!-- ============================================  -->
    <!-- Filenames used by dependent targets           -->
    <!-- ============================================  -->
    <property name="standards-report-file" value="standards"/>
    <property name="phplint-report-file"   value="phplint"/>
    <property name="test-bootstrap"        value="bootstrap.php"/>
    <property name="test-log-file"         value="tests.xml"/>
    <property name="coverage-report-db"    value="database"/>
    <property name="coverage-report-file"  value="coverage.xml"/>

    <!-- ============================================  -->
    <!-- (DEFAULT) Target: build                       -->
    <!-- ============================================  -->
    <target
        name="build"
        description="Execute full build process"
        depends="clean, prepare, test, generate"
    />

    <!-- ============================================  -->
    <!-- Target: clean                                 -->
    <!-- ============================================  -->
    <target name="clean" description="Cleanup build artifacts">
        <delete dir="${doc-dir}"/>
        <delete dir="${test-log-dir}"/>
        <delete dir="${test-report-dir}"/>
        <delete dir="${coverage-report-dir}"/>
        <delete dir="${standards-report-dir}"/>
        <delete dir="${phplint-report-dir}"/>
    </target>

    <!-- ============================================  -->
    <!-- Target: prepare                               -->
    <!-- ============================================  -->
    <target
        name="prepare"
        description="Execute all preparation tasks"
        depends="prepare-preload-classmap, prepare-build-dir, prepare-coverage-report"
    />

    <!-- ============================================  -->
    <!-- Target: prepare-build-dir                     -->
    <!-- ============================================  -->
    <target name="prepare-build-dir" description="Prepare build output dir" depends="clean">
        <mkdir dir="${build-dir}"/>
        <mkdir dir="${doc-dir}"/>
        <mkdir dir="${test-log-dir}"/>
        <mkdir dir="${test-report-dir}"/>
        <mkdir dir="${coverage-report-dir}"/>
        <mkdir dir="${standards-report-dir}"/>
        <mkdir dir="${phplint-report-dir}"/>
    </target>

    <!-- ============================================  -->
    <!-- Target: prepare-preload-classmap              -->
    <!-- http://www.phing.info/trac/ticket/117         -->
    <!-- ============================================  -->
    <target name="prepare-preload-classmap" description="Autoloader incompatibility workaround" depends="clean">
        <adhoc><![CDATA[
            require_once('./tests/bootstrap.php');
            foreach (require('./vendor/composer/autoload_classmap.php') as $path) {
                require_once($path);
            }
        ]]></adhoc>
    </target>

    <!-- ============================================  -->
    <!-- Target: prepare-coverage-report               -->
    <!-- ============================================  -->
    <target name="prepare-coverage-report" description="Setup test coverage db" depends="prepare-build-dir">
        <coverage-setup database="${coverage-report-dir}/${coverage-report-db}">
            <fileset dir="${source-dir}">
                <include name="**/*.php"/>
            </fileset>
        </coverage-setup>
    </target>

    <!-- ============================================  -->
    <!-- Target: test                                  -->
    <!-- ============================================  -->
    <target name="test" description="Execute all framework tests" depends="prepare">
        <phpunit
            printsummary="true"
            haltonfailure="true"
            haltonerror="true"
            codecoverage="true"
            bootstrap="${tests-dir}/${test-bootstrap}"
        >
            <formatter type="xml" todir="${test-log-dir}" outfile="${test-log-file}"/>
            <batchtest>
                <fileset dir="${tests-dir}">
                    <include name="**/*Test.php" />
                </fileset>
            </batchtest>
        </phpunit>
    </target>

    <!-- ============================================  -->
    <!-- Target: test-specific                         -->
    <!-- $ phing test-specific -Dtest=Test/Class/Name  -->
    <!-- ============================================  -->
    <target name="test-specific" description="Execute specific framework test" depends="prepare">
        <phpunit
            printsummary="true"
            haltonfailure="true"
            haltonerror="true"
            codecoverage="true"
            bootstrap="${tests-dir}/${test-bootstrap}"
        >
            <formatter type="xml" todir="${test-log-dir}" outfile="${test-log-file}"/>
            <batchtest>
                <fileset dir="${tests-dir}">
                    <include name="${test}.php" />
                </fileset>
            </batchtest>
        </phpunit>
        <echo>./tests/${test}.php</echo>
    </target>

    <!-- ============================================  -->
    <!-- Target: generate                              -->
    <!-- ============================================  -->
    <target
        name="generate"
        description="Execute all generation targets"
        depends="generate-phpdoc, generate-coverage-report, generate-standards-report, generate-phplint-report"
    />

    <!-- ============================================  -->
    <!-- Target: generate-phpdoc                       -->
    <!-- ============================================  -->
    <target name="generate-phpdoc" description="Generate PHP Documenter 2 Docs" depends="prepare">
        <phpdoc2
            title="API Documentation"
            destdir="${doc-dir}"
            template="responsive"
        >
            <fileset dir="${source-dir}">
                <include name="**/*.php" />
            </fileset>
        </phpdoc2>
    </target>

    <!-- ============================================  -->
    <!-- Target: generate-coverage-report              -->
    <!-- ============================================  -->
    <target name="generate-coverage-report" description="Generate code coverage report" depends="prepare">
        <phpunitreport
            infile="${test-log-dir}/${test-log-file}"
            styledir="${coverage-report-styles-dir}"
            format="frames"
            todir="${test-report-dir}"
        />
        <coverage-report outfile="${coverage-report-dir}/${coverage-report-file}">
            <report styledir="${coverage-report-styles-dir}" todir="${coverage-report-dir}"/>
        </coverage-report>
    </target>

    <!-- ============================================  -->
    <!-- Target: generate-standards-report             -->
    <!-- ============================================  -->
    <target name="generate-standards-report" description="Generate code standards report" depends="prepare">
        <phpcodesniffer
            standard="PSR2"
            allowedFileExtensions="php"
        >
            <formatter type="full" outfile="${standards-report-dir}/${standards-report-file}"/>
            <fileset dir="${source-dir}">
                <include name="**/*.php" />
            </fileset>
            <fileset dir="${tests-dir}">
                <include name="**/*.php" />
            </fileset>
        </phpcodesniffer>
    </target>

    <!-- ============================================  -->
    <!-- Target: generate-phplint-report               -->
    <!-- ============================================  -->
    <target name="generate-phplint-report" description="Generate PHP Lint report" depends="prepare">
        <phplint
            tofile="${phplint-report-dir}/${phplint-report-file}"
            deprecatedAsError="true"
        >
            <fileset dir="${source-dir}">
                <include name="**/*.php" />
            </fileset>
            <fileset dir="${tests-dir}">
                <include name="**/*.php" />
            </fileset>
        </phplint>
    </target>

</project>
