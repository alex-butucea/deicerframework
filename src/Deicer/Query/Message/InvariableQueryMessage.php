<?php
/**
 * Deicer Framework (http://github.com/alex-butucea/deicerframework)
 *
 * @link       http://github.com/alex-butucea/deicerframework for canonical source repository
 * @copyright  2013 Alex Butucea <alex826@gmail.com>
 * @license    The MIT License (MIT) {@link http://opensource.org/licenses/MIT}
 */

namespace Deicer\Query\Message;

use Deicer\Query\InvariableQueryInterface;
use Deicer\Query\Message\InvariableQueryMessageInterface;
use Deicer\Exception\Type\NonStringException;

/**
 * A representation of an message generated by an invariable query
 *
 * Implements an Immutable Object pattern
 *
 * @category   Deicer
 * @package    Query
 * @subpackage Message
 * @version    $id$
 * @copyright  2013 Alex Butucea <alex826@gmail.com>
 * @author     Alex Butucea <alex826@gmail.com>
 * @license    The MIT License (MIT) {@link http://opensource.org/licenses/MIT}
 */
class InvariableQueryMessage extends AbstractQueryMessage implements
    InvariableQueryMessageInterface
{
    /**
     * {@inheritdoc}
     */
    public function __construct(
        $topic,
        $content,
        InvariableQueryInterface $publisher
    ) {
        parent::__construct($topic, $content, $publisher);
    }

    /**
     * Retruns topic, execution time and json encoded content
     *
     * {@inheritdoc}
     */
    public function __toString()
    {
        return sprintf(
            self::SERIALIZED_FORMAT,
            get_class($this->publisher),
            $this->topic,
            $this->elapsedTime,
            json_encode($this->content)
        );
    }
}
