<?php

namespace Deicer\Query\Event;

use Deicer\Query\TokenizedQueryInterface;
use Deicer\Query\Event\QueryEventInterface;
use Deicer\Stdlib\TokenProviderInterface;

/**
 * Interface for execution events generated by tokenized queries
 *
 * @category   Deicer
 * @package    Query
 * @subpackage Event
 * @version    $id$
 * @copyright  2013 Alex Butucea <alex826@gmail.com>
 * @author     Alex Butucea <alex826@gmail.com>
 * @license    The MIT License (MIT) {@link http://opensource.org/licenses/MIT}
 */
interface TokenizedQueryEventInterface extends
 TokenProviderInterface,
 QueryEventInterface
{
    /**
     * String serialization format
     * 
     * @const string
     */
    const SERIALIZED_FORMAT = 'Tokenized Query Execution: %s | Result: "%s" | Elapsed Time: %dms | Token: "%s" | Content: %s';

    /**
     * Tokenized query constructor
     *
     * @throws NonStringException If $topic is not a string
     * @throws NonStringException If $token is not a string
     * @param  string $topic See constants in QueryEventInterface
     * @param  mixed $content Content returned from the query's inner execution
     * @param  TokenizedQueryInterface $publisher Event originator
     * @param  string Unique token to search by
     * @return TokenizedQueryEventInterface
     */
    public function __construct(
        $topic,
        $content,
        TokenizedQueryInterface $publisher,
        $token
    );
}
