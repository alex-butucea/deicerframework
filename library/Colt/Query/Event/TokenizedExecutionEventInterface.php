<?php

namespace Colt\Query\Event;

use Colt\Query\TokenizedQueryInterface;
use Colt\Query\Event\ExecutionEventInterface;
use Colt\Stdlib\TokenProviderInterface;

/**
 * Interface for execution events generated by tokenized queries
 *
 * @category   Colt
 * @package    Query
 * @subpackage Event
 * @version    $id$
 * @copyright  2013 Alex Butucea <alex826@gmail.com>
 * @author     Alex Butucea <alex826@gmail.com>
 * @license    The MIT License (MIT) {@link http://opensource.org/licenses/MIT}
 */
interface TokenizedExecutionEventInterface extends
 TokenProviderInterface,
 ExecutionEventInterface
{
    /**
     * Tokenized query constructor
     *
     * @throws NonStringException If $topic is not a string
     * @throws NonStringException If $token is not a string
     * @param  string $topic See constants in ExecutionEventInterface
     * @param  mixed $content Content returned from the query's inner execution
     * @param  TokenizedQueryInterface $publisher Event originator
     * @param  string Unique token to search by
     * @return TokenizedExecutionEventInterface
     */
    public function __construct(
        $topic,
        $content,
        TokenizedQueryInterface $publisher,
        $token
    );
}
